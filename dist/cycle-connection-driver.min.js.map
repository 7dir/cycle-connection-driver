{"version":3,"sources":["cycle-connection-driver.min.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","cycleConnectionDriver","online$","_rx","Observable","fromEvent","window","map","offline$","currentStatus","navigator","onLine","connectionStatus$","merge","startWith","Object","defineProperty","value"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,gBAAZC,UAA0C,gBAAXC,QACxCA,OAAOD,QAAUD,EAAQG,QAAQ,OACR,kBAAXC,SAAyBA,OAAOC,IAC9CD,QAAQ,MAAOJ,GACW,gBAAZC,SACdA,QAA+B,sBAAID,EAAQG,QAAQ,OAEnDJ,EAA4B,sBAAIC,EAAQD,EAAS,KAChDO,KAAM,SAASC,GAClB,MAAgB,UAAUC,GAKhB,QAASC,GAAoBC,GAG5B,GAAGC,EAAiBD,GACnB,MAAOC,GAAiBD,GAAUT,OAGnC,IAAIC,GAASS,EAAiBD,IAC7BT,WACAW,GAAIF,EACJG,QAAQ,EAUT,OANAL,GAAQE,GAAUI,KAAKZ,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOW,QAAS,EAGTX,EAAOD,QAvBf,GAAIU,KAqCJ,OATAF,GAAoBM,EAAIP,EAGxBC,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,GAGjBR,EAAoB,KAK/B,SAASP,EAAQD,EAASQ,GAE/B,YAQA,SAASS,KAEP,GAAIC,GAAUC,EAAIC,WAAWC,UAAUC,OAAQ,UAAUC,IAAI,WAC3D,MAAO,WAGLC,EAAWL,EAAIC,WAAWC,UAAUC,OAAQ,WAAWC,IAAI,WAC7D,MAAO,YAGLE,EAAgBH,OAAOI,UAAUC,OAAS,SAAW,UAGrDC,EAAoBT,EAAIC,WAAWS,MAAMX,EAASM,GAAUM,UAAUL,EAE1E,OAAOG,GArBTG,OAAOC,eAAehC,EAAS,cAC7BiC,OAAO,GAGT,IAAId,GAAMX,EAAoB,EAoB9BR,GAAAA,WAAkBiB,GAIb,SAAShB,EAAQD,GAEtBC,EAAOD,QAAUM","file":"cycle-connection-driver.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Rx\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Rx\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cycleConnectionDriver\"] = factory(require(\"Rx\"));\n\telse\n\t\troot[\"cycleConnectionDriver\"] = factory(root[\"Rx\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _rx = __webpack_require__(1);\n\t\n\tfunction cycleConnectionDriver() {\n\t  // Map our online events to the string \"online\"\n\t  var online$ = _rx.Observable.fromEvent(window, 'online').map(function () {\n\t    return 'online';\n\t  });\n\t  // Map our offline events to the string \"offline\"\n\t  var offline$ = _rx.Observable.fromEvent(window, 'offline').map(function () {\n\t    return 'offline';\n\t  });\n\t\n\t  var currentStatus = window.navigator.onLine ? 'online' : 'offline';\n\t\n\t  // Merge the two streams, and start with the current connection status\n\t  var connectionStatus$ = _rx.Observable.merge(online$, offline$).startWith(currentStatus);\n\t\n\t  return connectionStatus$;\n\t}\n\t\n\texports.default = cycleConnectionDriver;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=cycle-connection-driver.js.map"],"sourceRoot":"/source/"}